{"version":3,"file":"static/js/679.ac16e1da.chunk.js","mappings":"+SAEaA,EAAmB,mCAAG,uGAElBC,EAAAA,EAAAA,IACX,4FAH6B,8EAMzB,IAAIC,MAAM,KAAIC,SANW,wDAAH,qDAUnBC,EAAiB,mCAAG,WAAMC,GAAN,0FAEhBJ,EAAAA,EAAAA,IAAA,6CAC2BI,EAD3B,8CAFgB,8EAMvB,IAAIH,MAAM,KAAIC,SANS,wDAAH,sDAUjBG,EAAiB,mCAAG,WAAMD,GAAN,0FAEhBJ,EAAAA,EAAAA,IAAA,6CAC2BI,EAD3B,sDAFgB,8EAMvB,IAAIH,MAAM,KAAIC,SANS,wDAAH,sDAUjBI,EAAiB,mCAAG,WAAMF,GAAN,0FAEhBJ,EAAAA,EAAAA,IAAA,6CAC2BI,EAD3B,sDAFgB,8EAMvB,IAAIH,MAAM,KAAIC,SANS,wDAAH,sDAUjBK,EAAgB,mCAAG,WAAMC,GAAN,0FAEfR,EAAAA,EAAAA,IAAA,0DACwCQ,EADxC,8CAFe,8EAMtB,IAAIP,MAAM,KAAIC,SANQ,wDAAH,qD,qICzC7B,EAAsB,2BAAtB,EAA8F,2BAA9F,EAAgI,4BAAhI,EAAyK,kCAAzK,EAAoN,8BAApN,EAA0P,6BAA1P,EAAgS,8BAAhS,EAA2U,kCAA3U,EAA0X,kC,kBC2G1X,EAhGqB,WAAO,IAAD,EACzB,GAA0BO,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,UAACL,EAASM,aAAV,QAAmB,MAErDC,EAAAA,EAAAA,YAAU,WACHT,IAIL,iBAAC,gHAE0BX,EAAAA,EAAAA,IAAkBW,GAF5C,gBAEWU,EAFX,EAEWA,KACRb,EAASa,GAHZ,gDAKGX,GAAS,GALZ,wDAAD,EAQD,GAAE,CAACC,IAIJ,OACE,6BACE,mBACEW,GAAIL,EAAoBM,QACxBC,QANc,kBAAMT,EAASE,EAAoBM,QAAnC,EAOdE,UAAWC,EAHb,+BAOCjB,IAAS,wBAAKA,EAAMV,UACpBQ,IACC,4BACE,iBAAKkB,UAAWC,EAAhB,WACE,0BACE,gBACED,UAAWC,EACXC,IACEpB,EAAMqB,YAAN,6CAC0CrB,EAAMqB,aADhD,cAIFC,IAAKtB,EAAMuB,WAGf,0BACE,2BACE,eAAIL,UAAWC,EAAf,UACE,wBAAKnB,EAAMuB,WAEb,gBAAIL,UAAWC,EAAf,WACE,sCACA,uBAAInB,EAAMwB,eAEZ,gBAAIN,UAAWC,EAAf,WACE,oCACA,eAAID,UAAWC,EAAf,SACGnB,EAAMyB,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChB,eAAeT,UAAWC,EAA1B,SACGQ,GADMA,EADO,UAOtB,gBAAIT,UAAWC,EAAf,WACE,0CACA,uBAAInB,EAAM4B,2BAKlB,eAAIV,UAAWC,EAAf,qCACA,gBAAID,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CAAMJ,GAAG,OAAOG,UAAWC,EAA3B,qBAIF,yBACE,SAAC,KAAD,CAAMJ,GAAG,UAAUG,UAAWC,EAA9B,2BAKJ,SAAC,EAAAU,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAMX,C","sources":["API.js","webpack://react-homework-template/./src/pages/MoviesDetails.module.css?259e","pages/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    return await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?api_key=169863a84bc27c731fc45c45dd4a4a7e'\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=169863a84bc27c731fc45c45dd4a4a7e`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieCredits = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=169863a84bc27c731fc45c45dd4a4a7e`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=169863a84bc27c731fc45c45dd4a4a7e`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieSearch = async query => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=169863a84bc27c731fc45c45dd4a4a7e`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};","// extracted by mini-css-extract-plugin\nexport default {\"Btn\":\"MoviesDetails_Btn__pM0kL\",\"Detals\":\"MoviesDetails_Detals__MShyf\",\"Img\":\"MoviesDetails_Img__EtusM\",\"Info\":\"MoviesDetails_Info__Kn6Ex\",\"DetalsItem\":\"MoviesDetails_DetalsItem__-1LPg\",\"Genres\":\"MoviesDetails_Genres__wUHQf\",\"Films\":\"MoviesDetails_Films__z3hj4\",\"Inform\":\"MoviesDetails_Inform__qr-ub\",\"InformList\":\"MoviesDetails_InformList__CFKUu\",\"InformItem\":\"MoviesDetails_InformItem__T-Zup\"};","import { useEffect, useRef, useState } from 'react';\nimport {\n  Outlet,\n  useNavigate,\n  Link,\n  useParams,\n  useLocation,\n} from 'react-router-dom';\nimport { Suspense } from 'react';\nimport css from './MoviesDetails.module.css';\nimport { fetchMovieDetails } from 'API';\n\nconst MovieDetails = () => {\n  const [films, setFilms] = useState(null);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backLinkLocationRef = useRef(location.state ?? '/');\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    (async () => {\n      try {\n        const { data } = await fetchMovieDetails(movieId);\n        setFilms(data);\n      } catch (error) {\n        setError(true);\n      }\n    })();\n  }, [movieId]);\n\n  const handleClick = () => navigate(backLinkLocationRef.current);\n\n  return (\n    <main>\n      <button\n        to={backLinkLocationRef.current}\n        onClick={handleClick}\n        className={css.Btn}\n      >\n        ⬅️ Back\n      </button>\n      {error && <h1>{error.message}</h1>}\n      {films && (\n        <div>\n          <div className={css.Info}>\n            <div>\n              <img\n                className={css.Img}\n                src={\n                  films.poster_path\n                    ? `https://image.tmdb.org/t/p/original${films.poster_path}`\n                    : `films.image`\n                }\n                alt={films.title}\n              />\n            </div>\n            <div>\n              <ul>\n                <li className={css.DetalsItem}>\n                  <h1>{films.title}</h1>\n                </li>\n                <li className={css.DetalsItem}>\n                  <h2>Overview</h2>\n                  <p>{films.overview}</p>\n                </li>\n                <li className={css.DetalsItem}>\n                  <h2>Genres</h2>\n                  <ul className={css.Genres}>\n                    {films.genres.map(({ name }) => (\n                      <li key={name} className={css.Films}>\n                        {name}\n                      </li>\n                    ))}\n                  </ul>\n                </li>\n                <li className={css.DetalsItem}>\n                  <h2>Release date</h2>\n                  <p>{films.release_date}</p>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <h3 className={css.Inform}>Additional information</h3>\n          <ul className={css.InformList}>\n            <li>\n              <Link to=\"cast\" className={css.InformItem}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" className={css.InformItem}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </main>\n  );\n};\nexport default MovieDetails;"],"names":["fetchTrendingMovies","axios","Error","message","fetchMovieDetails","id","fetchMovieCredits","fetchMovieReviews","fetchMovieSearch","query","useState","films","setFilms","error","setError","movieId","useParams","location","useLocation","navigate","useNavigate","backLinkLocationRef","useRef","state","useEffect","data","to","current","onClick","className","css","src","poster_path","alt","title","overview","genres","map","name","release_date","Suspense","fallback"],"sourceRoot":""}