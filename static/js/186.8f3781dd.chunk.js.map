{"version":3,"file":"static/js/186.8f3781dd.chunk.js","mappings":"+SAEaA,EAAmB,mCAAG,uGAElBC,EAAAA,EAAAA,IACX,4FAH6B,8EAMzB,IAAIC,MAAM,KAAIC,SANW,wDAAH,qDAUnBC,EAAiB,mCAAG,WAAMC,GAAN,0FAEhBJ,EAAAA,EAAAA,IAAA,6CAC2BI,EAD3B,8CAFgB,8EAMvB,IAAIH,MAAM,KAAIC,SANS,wDAAH,sDAUjBG,EAAiB,mCAAG,WAAMD,GAAN,0FAEhBJ,EAAAA,EAAAA,IAAA,6CAC2BI,EAD3B,sDAFgB,8EAMvB,IAAIH,MAAM,KAAIC,SANS,wDAAH,sDAUjBI,EAAiB,mCAAG,WAAMF,GAAN,0FAEhBJ,EAAAA,EAAAA,IAAA,6CAC2BI,EAD3B,sDAFgB,8EAMvB,IAAIH,MAAM,KAAIC,SANS,wDAAH,sDAUjBK,EAAgB,mCAAG,WAAMC,GAAN,0FAEfR,EAAAA,EAAAA,IAAA,0DACwCQ,EADxC,8CAFe,8EAMtB,IAAIP,MAAM,KAAIC,SANQ,wDAAH,qD,yGCA7B,UAtCgB,WACd,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACHP,IAGL,iBAAC,gHAE0BH,EAAAA,EAAAA,IAAkBG,GAF5C,mBAG+B,KADpBQ,EAFX,EAEWA,MACCC,QAAQC,OAHpB,yCAGyCN,EAAWI,EAAKC,UAHzD,OAIGL,EAAW,MAJd,kDAMGE,EAAS,EAAD,IANX,yDAAD,EASD,GAAE,CAACN,KAGF,gCACGK,IAAS,wBAAKA,EAAMZ,WACrB,0BACGU,GACCA,EAAQQ,KAAI,SAAAR,GAAO,OACjB,2BACE,qCAAaA,EAAQS,WACrB,uBAAIT,EAAQU,YAFLV,EAAQR,GADA,IAMD,IAAnBQ,EAAQO,SACP,0EAKT,C","sources":["API.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    return await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?api_key=169863a84bc27c731fc45c45dd4a4a7e'\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=169863a84bc27c731fc45c45dd4a4a7e`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieCredits = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=169863a84bc27c731fc45c45dd4a4a7e`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=169863a84bc27c731fc45c45dd4a4a7e`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieSearch = async query => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=169863a84bc27c731fc45c45dd4a4a7e`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieReviews } from 'API';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    (async () => {\n      try {\n        const { data } = await fetchMovieReviews(movieId);\n        if (data.results.length !== 0) return setReviews(data.results);\n        setReviews(null);\n      } catch (error) {\n        setError(error);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <h1>{error.message}</h1>}\n      <ul>\n        {reviews &&\n          reviews.map(reviews => (\n            <li key={reviews.id}>\n              <h3>Author: {reviews.author}</h3>\n              <p>{reviews.content}</p>\n            </li>\n          ))}\n        {reviews.length === 0 && (\n          <h3>We don`t have any reviews for this movie</h3>\n        )}\n      </ul>\n    </>\n  );\n};\nexport default Reviews;"],"names":["fetchTrendingMovies","axios","Error","message","fetchMovieDetails","id","fetchMovieCredits","fetchMovieReviews","fetchMovieSearch","query","movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","data","results","length","map","author","content"],"sourceRoot":""}